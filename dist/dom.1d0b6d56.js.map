{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","innerContent","html","style","Object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    //create(tagName) {\r\n      //  return document.createElement(tagName);\r\n      //dom.create = function(){}\r\n      create(string){\r\n          const container = document.createElement('template');// 因为这个容器是div，div里面是不能放td的，\r\n          //有什么标签是可以放任意元素，而不出错：template:容纳任何内容，不会在页面中显示\r\n          container.innerHTML = string.trim();//字符串要trim一下，不然有空格\r\n          return container.content.firstChild;\r\n    },\r\n    after(node,node2){\r\n        //node.parentNode.insertBefore(node.node2) //这样是可以把node2插到node前面，但是我们要做的是插到后面\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n    }, //在一个节点后面插入一个节点node2，新增弟弟节点\r\n    before(node, node2){\r\n        node.parentNode.insertBefore(node2, node);\r\n    },//做一个接口，就是在前一个节点，这是默认支持的接口，新增哥哥节点\r\n    append(parent,node){\r\n        parent.appendChild(node);\r\n    }, //新增加孩子\r\n    wrap(node, parent){\r\n        dom.before(node,parent)  //把parent放到node前面，eg：在div1和div2中间插入div3\r\n        dom.append(parent,node)  //在把node放到parent里面，eg: 把div2删掉，放到div3里面\r\n    }, \r\n    remove(node){\r\n        node.parentNode.removeChild(node) //从爸爸这个节点删除这个儿子\r\n        return node  //删的人还可以保持这个节点的引用\r\n    },\r\n    empty(node){   //给一个节点，把这个节点所有的儿子给干掉\r\n        // node.innerHTML = \"\" 但是没办法获取节点的引用  \r\n        // const {childNodes} = node\r\n        const array = []\r\n        let x = node.firstChild\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild  //这里的firstchild是之前第二个节点递阶上去，变成第一个儿子\r\n        }\r\n        return array\r\n    },\r\n    attr(node, name, value){          //过程叫做重载；接受一个节点，属性名，属性值\r\n        if(arguments.length === 3){\r\n            node.setAttribute(name,value)\r\n        }else if(arguments.length === 2){\r\n            return node.getAttribute(name)\r\n        }         \r\n      },\r\n    text(node, string){  //这种写代码的方式叫适配，用于读写文本内容\r\n        // console.log('innerText' in node) //检测innerText在不在Node里面，答：在\r\n        if(arguments.length === 2){\r\n            if('innerText' in node){\r\n                node.innerText = string //ie\r\n            }else{\r\n                node.innerContent = string //firefox /chrome\r\n            }\r\n        }else if(arguments.length === 1){\r\n            if('innerText' in node){\r\n                return node.innerText //ie\r\n            }else{\r\n                return node.innerContent //firefox /chrome\r\n            }\r\n        }\r\n    },\r\n    html(node, string){  //改html;text和html完成了即可读，也可以写\r\n        if(arguments.length === 2){  //如果参数长度为2，设置\r\n            node.innerHTML = string\r\n        }else if(arguments.length === 1){ //如果参数长度为1\r\n            return node.innerHTML\r\n        }        \r\n    },\r\n    style(node, name, value){ //如果name等于字符串\r\n        if(arguments.length === 3){\r\n            //dom.style(div, 'color', 'red') 把div的颜色改成红色;dom style三个参数\r\n            node.style[name] = value\r\n        }else if(arguments.length ===2) {\r\n            if(typeof name === 'string'){\r\n                //dome.style(div, 'color') 想获取div里面的color;dom style两个参数\r\n                return node.style[name]\r\n            }else if(name instanceof Object){\r\n                //dom.style(div,{color:'red'}) dom style后面接一个对象\r\n                const Object = name\r\n                for(let key in Object){  //因为key可能是等于border,也可能是color\r\n                    // node.style.border = ...\r\n                    // node.style.color = ... 正常来说应该是这两行写的，但是因为border和color是变量，\r\n                    //所以下一行代码的key要放在[]里面，没加[]，key会变成字符串\r\n                    node.style[key] = Object[key]  //原本Object改成了name，name就是Object的对象\r\n                } \r\n            }\r\n  \r\n        }\r\n    },\r\n    class:{  //class是个对象\r\n        add(node, className){\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className){\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className){ //node里面有没有className，有的话就调用它\r\n           return node.classList.contains(className)\r\n        }//检查元素的类属性种是否存在指定的类值\r\n    },\r\n    on (node, eventName, fn){\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn){\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    find(selector, scope){   //给一个选择器;scope是范围的意思\r\n        return (scope || document).querySelectorAll(selector) //如果有scope，就在里面查找，如果没有就再doc里面调用querySelectorAll\r\n    },\r\n    parent(node){  //获取爸爸元素\r\n        return node.parentNode\r\n    },\r\n    children(node){  //获取子元素\r\n        return node.children\r\n    },\r\n    siblings(node){  //获取兄弟姐妹，不能返回自己的\r\n       return Array.from(node.parentNode.children)\r\n       .filter(n => n !== node) //children是伪数组，所以要变成数组要加array.from;\r\n       //filter+数组,filter对应每个节点，不等于传给我这个节点,这样就可以获取所有的兄弟姐们节点\r\n    },\r\n    next(node){ //获取s2的下一个节点\r\n        let x = node.nextSibling\r\n        while(x && x.nodeType ===3 ){ //如果x存在，且，x节点等于3,3是文本\r\n            x = x.nextSibling   //让x等于s的下一个文本节点，一直这么循环，直到找到下一个节点不是文本\r\n        } \r\n        return x\r\n    },\r\n    previous(node){  //查找上一个节点\r\n        let x = node.previousSibling\r\n        while(x && x.nodeType ===3 ){ //如果x存在，且，x节点等于3,3是文本\r\n            x = x.previousSibling   //让x等于s的下一个文本节点，一直这么循环，直到找到下一个节点不是文本\r\n        } \r\n        return x\r\n    },\r\n    each(nodeList, fn){  //给一个节点的列表，给一个函数\r\n        for(let i = 0; i< nodeList.length; i++){\r\n            fn.call(null, nodeList[i]) //调用fn，传的是this，没有this，this不传，传的第一个参数就是列表的第i个\r\n        }//对节点的每一个函数进行调用\r\n    },\r\n    index(node){  //获取这个节点排行第几\r\n        const list = dom.children(node.parentNode) //让列表等于获取爸爸的所有的儿子\r\n        let i  //这样i的声明作用域就作用到return i了，i就可以拿到值了\r\n        for(i = 0; i<list.length;i++){  //遍历这个列表\r\n            if(list[i] === node){ //让列表的i跟节点匹配，如果等于这个节点，就停下来\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};\r\n\r\n"]}